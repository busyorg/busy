// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`(Component) UserWalletTransactions with default prop values renders and matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,

  "node": <div
    className="UserWalletTransactions"
  >
    <ReduxInfiniteScroll
      className=""
      containerHeight="100%"
      elementIsScrollable={false}
      hasMore={true}
      holderType="div"
      items={Array []}
      loadMore={[Function]}
      loader={
        <div
          style={
            Object {
              "margin": "20px",
            }
          }
        >
          <Loading
            center={true}
            style={Object {}}
          />
        </div>
      }
      loadingMore={false}
      showLoader={true}
      threshold={500}
    >
      <div />
      <WalletTransaction
        currentUsername="hellosteem"
        totalVestingFundSteem="0"
        totalVestingShares="0"
        transaction={
          Object {
            "op": Array [
              "transfer_to_vesting",
              Object {
                "amount": "100 STEEM",
              },
            ],
            "timestamp": "0",
          }
        }
      />
      <WalletTransaction
        currentUsername="hellosteem"
        totalVestingFundSteem="0"
        totalVestingShares="0"
        transaction={
          Object {
            "op": Array [
              "transfer",
              Object {
                "amount": "100 STEEM",
                "from": "hellosteem1",
                "memo": "transfer memo",
              },
            ],
            "timestamp": "0",
          }
        }
      />
    </ReduxInfiniteScroll>
  </div>,
  "nodes": Array [
    <div
      className="UserWalletTransactions"
    >
      <ReduxInfiniteScroll
=======
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserWalletTransactions
    currentUsername="hellosteem"
    totalVestingFundSteem="0"
    totalVestingShares="0"
    transactions={
      Array [
        Object {
          "op": Array [
            "transfer_to_vesting",
            Object {
              "amount": "100 STEEM",
            },
          ],
          "timestamp": "0",
        },
        Object {
          "op": Array [
            "transfer",
            Object {
              "amount": "100 STEEM",
              "from": "hellosteem1",
              "memo": "transfer memo",
            },
          ],
          "timestamp": "0",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ReduxInfiniteScroll
        animateItems={false}

        className=""
        containerHeight="100%"
        elementIsScrollable={false}
        hasMore={true}
        holderType="div"
        horizontal={false}
        items={Array []}
        loadMore={[Function]}
        loader={
          <div
            style={
              Object {
                "margin": "20px",
              }
            }
          >
            <Loading
              center={true}
              style={Object {}}
            />
          </div>
        }
        loadingMore={false}
        showLoader={true}

        threshold={500}

        threshold={200}
        transitionAppear={true}
        transitionAppearTimeout={2000}
        transitionEnter={true}
        transitionEnterTimeout={2000}
        transitionLeave={true}
        transitionLeaveTimeout={1000}
        transitionName="redux-infinite-scroll"

      >
        <div />
        <WalletTransaction
          currentUsername="hellosteem"
          totalVestingFundSteem="0"
          totalVestingShares="0"
          transaction={
            Object {
              "op": Array [
                "transfer_to_vesting",
                Object {
                  "amount": "100 STEEM",
                },
              ],
              "timestamp": "0",
            }
          }
        />
        <WalletTransaction
          currentUsername="hellosteem"
          totalVestingFundSteem="0"
          totalVestingShares="0"
          transaction={
            Object {
              "op": Array [
                "transfer",
                Object {
                  "amount": "100 STEEM",
                  "from": "hellosteem1",
                  "memo": "transfer memo",
                },
              ],
              "timestamp": "0",
            }
          }
        />

      </ReduxInfiniteScroll>
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <UserWalletTransactions
        actions={Array []}
        currentUsername="hellosteem"
        totalVestingFundSteem="0"
        totalVestingShares="0"
        transactions={
          Array [
            Object {
              "op": Array [
                "transfer_to_vesting",
                Object {
                  "amount": "100 STEEM",
                },
              ],
              "timestamp": "0",
            },
            Object {
              "op": Array [
                "transfer",
                Object {
                  "amount": "100 STEEM",
                  "from": "hellosteem1",
                  "memo": "transfer memo",
                },
              ],
              "timestamp": "0",
            },
          ]
        }
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": UserWalletTransactions {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "handleLoadMore": [Function],
        "props": Object {
          "actions": Array [],
          "currentUsername": "hellosteem",
          "totalVestingFundSteem": "0",
          "totalVestingShares": "0",
          "transactions": Array [
            Object {
              "op": Array [
                "transfer_to_vesting",
                Object {
                  "amount": "100 STEEM",
                },
              ],
              "timestamp": "0",
            },
            Object {
              "op": Array [
                "transfer",
                Object {
                  "amount": "100 STEEM",
                  "from": "hellosteem1",
                  "memo": "transfer memo",
                },
              ],
              "timestamp": "0",
            },
          ],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="UserWalletTransactions"
        >
          <ReduxInfiniteScroll
            className=""
            containerHeight="100%"
            elementIsScrollable={false}
            hasMore={true}
            holderType="div"
            items={Array []}
            loadMore={[Function]}
            loader={
              <div
                style={
                  Object {
                    "margin": "20px",
                  }
                }
              >
                <Loading
                  center={true}
                  style={Object {}}
                />
              </div>
            }
            loadingMore={false}
            showLoader={true}
            threshold={500}
          >
            <div />
            <WalletTransaction
              currentUsername="hellosteem"
              totalVestingFundSteem="0"
              totalVestingShares="0"
              transaction={
                Object {
                  "op": Array [
                    "transfer_to_vesting",
                    Object {
                      "amount": "100 STEEM",
                    },
                  ],
                  "timestamp": "0",
                }
              }
            />
            <WalletTransaction
              currentUsername="hellosteem"
              totalVestingFundSteem="0"
              totalVestingShares="0"
              transaction={
                Object {
                  "op": Array [
                    "transfer",
                    Object {
                      "amount": "100 STEEM",
                      "from": "hellosteem1",
                      "memo": "transfer memo",
                    },
                  ],
                  "timestamp": "0",
                }
              }
            />
          </ReduxInfiniteScroll>
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="UserWalletTransactions"
        >
          <ReduxInfiniteScroll
            className=""
            containerHeight="100%"
            elementIsScrollable={false}
            hasMore={true}
            holderType="div"
            items={Array []}
            loadMore={[Function]}
            loader={
              <div
                style={
                  Object {
                    "margin": "20px",
                  }
                }
              >
                <Loading
                  center={true}
                  style={Object {}}

      </ReduxInfiniteScroll>,
      "className": "UserWalletTransactions",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "animateItems": false,
        "children": Array [
          <PowerUpTransaction
            amount={
              <span>
                <FormattedNumber
                  maximumFractionDigits={3}
                  minimumFractionDigits={3}
                  value={100}
                />
                 SP
              </span>
            }
            timestamp="0"
          />,
          <TransferTransaction
            amount={
              <span>
                <FormattedNumber
                  maximumFractionDigits={3}
                  minimumFractionDigits={3}
                  value={100}
                />
                 STEEM
              </span>
            }
            memo="transfer memo"
            timestamp="0"
            to=""
          />,
        ],
        "className": "",
        "containerHeight": "100%",
        "elementIsScrollable": false,
        "hasMore": false,
        "holderType": "div",
        "horizontal": false,
        "items": Array [],
        "loadMore": [Function],
        "loader": <div
          style={
            Object {
              "margin": "20px",
            }
          }
        >
          <Loading
            center={true}
            style={Object {}}
          />
        </div>,
        "loadingMore": false,
        "showLoader": true,
        "threshold": 200,
        "transitionAppear": true,
        "transitionAppearTimeout": 2000,
        "transitionEnter": true,
        "transitionEnterTimeout": 2000,
        "transitionLeave": true,
        "transitionLeaveTimeout": 1000,
        "transitionName": "redux-infinite-scroll",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "undefined0",
          "nodeType": "function",
          "props": Object {
            "amount": <span>
              <FormattedNumber
                maximumFractionDigits={3}
                minimumFractionDigits={3}
                value={100}
              />
               SP
            </span>,
            "timestamp": "0",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "undefined1",
          "nodeType": "function",
          "props": Object {
            "amount": <span>
              <FormattedNumber
                maximumFractionDigits={3}
                minimumFractionDigits={3}
                value={100}
              />
               STEEM
            </span>,
            "memo": "transfer memo",
            "timestamp": "0",
            "to": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ReduxInfiniteScroll
          animateItems={false}
          className=""
          containerHeight="100%"
          elementIsScrollable={false}
          hasMore={false}
          holderType="div"
          horizontal={false}
          items={Array []}
          loadMore={[Function]}
          loader={
            <div
              style={
                Object {
                  "margin": "20px",
                }
              }
            >
              <Loading
                center={true}
                style={Object {}}
              />
            </div>
          }
          loadingMore={false}
          showLoader={true}
          threshold={200}
          transitionAppear={true}
          transitionAppearTimeout={2000}
          transitionEnter={true}
          transitionEnterTimeout={2000}
          transitionLeave={true}
          transitionLeaveTimeout={1000}
          transitionName="redux-infinite-scroll"
        >
          <PowerUpTransaction
            amount={
              <span>
                <FormattedNumber
                  maximumFractionDigits={3}
                  minimumFractionDigits={3}
                  value={100}

                />
                 SP
              </span>
            }

            loadingMore={false}
            showLoader={true}
            threshold={500}
          >
            <div />
            <WalletTransaction
              currentUsername="hellosteem"
              totalVestingFundSteem="0"
              totalVestingShares="0"
              transaction={
                Object {
                  "op": Array [
                    "transfer_to_vesting",
                    Object {
                      "amount": "100 STEEM",
                    },
                  ],
                  "timestamp": "0",
                }
              }
            />
            <WalletTransaction
              currentUsername="hellosteem"
              totalVestingFundSteem="0"
              totalVestingShares="0"
              transaction={
                Object {
                  "op": Array [
                    "transfer",
                    Object {
                      "amount": "100 STEEM",
                      "from": "hellosteem1",
                      "memo": "transfer memo",
                    },
                  ],
                  "timestamp": "0",
                }
              }
            />
          </ReduxInfiniteScroll>
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <UserWalletTransactions
    actions={Array []}
    currentUsername="hellosteem"
    totalVestingFundSteem="0"
    totalVestingShares="0"
    transactions={
      Array [
        Object {
          "op": Array [
            "transfer_to_vesting",
            Object {
              "amount": "100 STEEM",
            },

            timestamp="0"
          />
          <TransferTransaction
            amount={
              <span>
                <FormattedNumber
                  maximumFractionDigits={3}
                  minimumFractionDigits={3}
                  value={100}
                />
                 STEEM
              </span>
            }
            memo="transfer memo"
            timestamp="0"
            to=""
          />
        </ReduxInfiniteScroll>,
        "className": "UserWalletTransactions",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "animateItems": false,
          "children": Array [
            <PowerUpTransaction
              amount={
                <span>
                  <FormattedNumber
                    maximumFractionDigits={3}
                    minimumFractionDigits={3}
                    value={100}
                  />
                   SP
                </span>
              }
              timestamp="0"
            />,
            <TransferTransaction
              amount={
                <span>
                  <FormattedNumber
                    maximumFractionDigits={3}
                    minimumFractionDigits={3}
                    value={100}
                  />
                   STEEM
                </span>
              }
              memo="transfer memo"
              timestamp="0"
              to=""
            />,

          ],
          "className": "",
          "containerHeight": "100%",
          "elementIsScrollable": false,
          "hasMore": false,
          "holderType": "div",
          "horizontal": false,
          "items": Array [],
          "loadMore": [Function],
          "loader": <div
            style={
              Object {
                "margin": "20px",
              }
            }
          >
            <Loading
              center={true}
              style={Object {}}
            />
          </div>,
          "loadingMore": false,
          "showLoader": true,
          "threshold": 200,
          "transitionAppear": true,
          "transitionAppearTimeout": 2000,
          "transitionEnter": true,
          "transitionEnterTimeout": 2000,
          "transitionLeave": true,
          "transitionLeaveTimeout": 1000,
          "transitionName": "redux-infinite-scroll",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "undefined0",
            "nodeType": "function",
            "props": Object {
              "amount": <span>
                <FormattedNumber
                  maximumFractionDigits={3}
                  minimumFractionDigits={3}
                  value={100}
                />
                 SP
              </span>,
              "timestamp": "0",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "undefined1",
            "nodeType": "function",
            "props": Object {
              "amount": <span>
                <FormattedNumber
                  maximumFractionDigits={3}
                  minimumFractionDigits={3}
                  value={100}
                />
                 STEEM
              </span>,
              "memo": "transfer memo",
              "timestamp": "0",
              "to": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
