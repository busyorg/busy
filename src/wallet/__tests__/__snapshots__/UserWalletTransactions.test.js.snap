// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`(Component) UserWalletTransactions with default prop values renders and matches snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="UserWalletTransactions"
  >
    <TransferTransaction
      amount={
        <span>
          <FormattedNumber
            maximumFractionDigits={3}
            minimumFractionDigits={3}
            value="100.000"
          />
           STEEM
        </span>
      }
      memo="transfer memo"
      timestamp="0"
      to=""
    />
    <PowerUpTransaction
      amount={
        <span>
          <FormattedNumber
            maximumFractionDigits={3}
            minimumFractionDigits={3}
            value="100.000"
          />
           SP
        </span>
      }
      timestamp="0"
    />
  </div>,
  "nodes": Array [
    <div
      className="UserWalletTransactions"
    >
      <TransferTransaction
        amount={
          <span>
            <FormattedNumber
              maximumFractionDigits={3}
              minimumFractionDigits={3}
              value="100.000"
            />
             STEEM
          </span>
        }
        memo="transfer memo"
        timestamp="0"
        to=""
      />
      <PowerUpTransaction
        amount={
          <span>
            <FormattedNumber
              maximumFractionDigits={3}
              minimumFractionDigits={3}
              value="100.000"
            />
             SP
          </span>
        }
        timestamp="0"
      />
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <UserWalletTransactions
        currentUsername="hellosteem"
        totalVestingFundSteem="0"
        totalVestingShares="0"
        transactions={
          Array [
            Object {
              "op": Array [
                "transfer_to_vesting",
                Object {
                  "amount": "100 STEEM",
                },
              ],
              "timestamp": "0",
            },
            Object {
              "op": Array [
                "transfer",
                Object {
                  "amount": "100 STEEM",
                  "from": "hellosteem1",
                  "memo": "transfer memo",
                },
              ],
              "timestamp": "0",
            },
          ]
        }
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "currentUsername": "hellosteem",
          "totalVestingFundSteem": "0",
          "totalVestingShares": "0",
          "transactions": Array [
            Object {
              "op": Array [
                "transfer_to_vesting",
                Object {
                  "amount": "100 STEEM",
                },
              ],
              "timestamp": "0",
            },
            Object {
              "op": Array [
                "transfer",
                Object {
                  "amount": "100 STEEM",
                  "from": "hellosteem1",
                  "memo": "transfer memo",
                },
              ],
              "timestamp": "0",
            },
          ],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="UserWalletTransactions"
        >
          <TransferTransaction
            amount={
              <span>
                <FormattedNumber
                  maximumFractionDigits={3}
                  minimumFractionDigits={3}
                  value="100.000"
                />
                 STEEM
              </span>
            }
            memo="transfer memo"
            timestamp="0"
            to=""
          />
          <PowerUpTransaction
            amount={
              <span>
                <FormattedNumber
                  maximumFractionDigits={3}
                  minimumFractionDigits={3}
                  value="100.000"
                />
                 SP
              </span>
            }
            timestamp="0"
          />
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="UserWalletTransactions"
        >
          <TransferTransaction
            amount={
              <span>
                <FormattedNumber
                  maximumFractionDigits={3}
                  minimumFractionDigits={3}
                  value="100.000"
                />
                 STEEM
              </span>
            }
            memo="transfer memo"
            timestamp="0"
            to=""
          />
          <PowerUpTransaction
            amount={
              <span>
                <FormattedNumber
                  maximumFractionDigits={3}
                  minimumFractionDigits={3}
                  value="100.000"
                />
                 SP
              </span>
            }
            timestamp="0"
          />
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <UserWalletTransactions
    currentUsername="hellosteem"
    totalVestingFundSteem="0"
    totalVestingShares="0"
    transactions={
      Array [
        Object {
          "op": Array [
            "transfer_to_vesting",
            Object {
              "amount": "100 STEEM",
            },
          ],
          "timestamp": "0",
        },
        Object {
          "op": Array [
            "transfer",
            Object {
              "amount": "100 STEEM",
              "from": "hellosteem1",
              "memo": "transfer memo",
            },
          ],
          "timestamp": "0",
        },
      ]
    }
  />,
}
`;
