// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`(Component) UserWalletTransactions with default prop values renders and matches snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <InfiniteScroll
    element="div"
    hasMore={true}
    initialLoad={true}
    isReverse={false}
    loadMore={[Function]}
    loader={null}
    pageStart={0}
    threshold={250}
    useCapture={false}
    useWindow={true}
  >
    <div
      className="UserWalletTransactions"
    >
      <PowerUpTransaction
        amount={
          <span>
            <FormattedNumber
              maximumFractionDigits={3}
              minimumFractionDigits={3}
              value="100.000"
            />
             SP
          </span>
        }
        timestamp="0"
      />
      <TransferTransaction
        amount={
          <span>
            <FormattedNumber
              maximumFractionDigits={3}
              minimumFractionDigits={3}
              value="100.000"
            />
             STEEM
          </span>
        }
        memo="transfer memo"
        timestamp="0"
        to=""
      />
    </div>
  </InfiniteScroll>,
  "nodes": Array [
    <InfiniteScroll
      element="div"
      hasMore={true}
      initialLoad={true}
      isReverse={false}
      loadMore={[Function]}
      loader={null}
      pageStart={0}
      threshold={250}
      useCapture={false}
      useWindow={true}
    >
      <div
        className="UserWalletTransactions"
      >
        <PowerUpTransaction
          amount={
            <span>
              <FormattedNumber
                maximumFractionDigits={3}
                minimumFractionDigits={3}
                value="100.000"
              />
               SP
            </span>
          }
          timestamp="0"
        />
        <TransferTransaction
          amount={
            <span>
              <FormattedNumber
                maximumFractionDigits={3}
                minimumFractionDigits={3}
                value="100.000"
              />
               STEEM
            </span>
          }
          memo="transfer memo"
          timestamp="0"
          to=""
        />
      </div>
    </InfiniteScroll>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <UserWalletTransactions
        currentUsername="hellosteem"
        totalVestingFundSteem="0"
        totalVestingShares="0"
        transactions={
          Array [
            Object {
              "op": Array [
                "transfer_to_vesting",
                Object {
                  "amount": "100 STEEM",
                },
              ],
              "timestamp": "0",
            },
            Object {
              "op": Array [
                "transfer",
                Object {
                  "amount": "100 STEEM",
                  "from": "hellosteem1",
                  "memo": "transfer memo",
                },
              ],
              "timestamp": "0",
            },
          ]
        }
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": UserWalletTransactions {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "getFormattedTransactionAmount": [Function],
        "handleLoadMore": [Function],
        "props": Object {
          "currentUsername": "hellosteem",
          "totalVestingFundSteem": "0",
          "totalVestingShares": "0",
          "transactions": Array [
            Object {
              "op": Array [
                "transfer_to_vesting",
                Object {
                  "amount": "100 STEEM",
                },
              ],
              "timestamp": "0",
            },
            Object {
              "op": Array [
                "transfer",
                Object {
                  "amount": "100 STEEM",
                  "from": "hellosteem1",
                  "memo": "transfer memo",
                },
              ],
              "timestamp": "0",
            },
          ],
        },
        "refs": Object {},
        "state": Object {
          "lastActionId": undefined,
          "userHasMoreTransactions": true,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <InfiniteScroll
          element="div"
          hasMore={true}
          initialLoad={true}
          isReverse={false}
          loadMore={[Function]}
          loader={null}
          pageStart={0}
          threshold={250}
          useCapture={false}
          useWindow={true}
        >
          <div
            className="UserWalletTransactions"
          >
            <PowerUpTransaction
              amount={
                <span>
                  <FormattedNumber
                    maximumFractionDigits={3}
                    minimumFractionDigits={3}
                    value="100.000"
                  />
                   SP
                </span>
              }
              timestamp="0"
            />
            <TransferTransaction
              amount={
                <span>
                  <FormattedNumber
                    maximumFractionDigits={3}
                    minimumFractionDigits={3}
                    value="100.000"
                  />
                   STEEM
                </span>
              }
              memo="transfer memo"
              timestamp="0"
              to=""
            />
          </div>
        </InfiniteScroll>,
        "_debugID": 2,
        "_renderedOutput": <InfiniteScroll
          element="div"
          hasMore={true}
          initialLoad={true}
          isReverse={false}
          loadMore={[Function]}
          loader={null}
          pageStart={0}
          threshold={250}
          useCapture={false}
          useWindow={true}
        >
          <div
            className="UserWalletTransactions"
          >
            <PowerUpTransaction
              amount={
                <span>
                  <FormattedNumber
                    maximumFractionDigits={3}
                    minimumFractionDigits={3}
                    value="100.000"
                  />
                   SP
                </span>
              }
              timestamp="0"
            />
            <TransferTransaction
              amount={
                <span>
                  <FormattedNumber
                    maximumFractionDigits={3}
                    minimumFractionDigits={3}
                    value="100.000"
                  />
                   STEEM
                </span>
              }
              memo="transfer memo"
              timestamp="0"
              to=""
            />
          </div>
        </InfiniteScroll>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <UserWalletTransactions
    currentUsername="hellosteem"
    totalVestingFundSteem="0"
    totalVestingShares="0"
    transactions={
      Array [
        Object {
          "op": Array [
            "transfer_to_vesting",
            Object {
              "amount": "100 STEEM",
            },
          ],
          "timestamp": "0",
        },
        Object {
          "op": Array [
            "transfer",
            Object {
              "amount": "100 STEEM",
              "from": "hellosteem1",
              "memo": "transfer memo",
            },
          ],
          "timestamp": "0",
        },
      ]
    }
  />,
}
`;
