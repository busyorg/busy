// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Topic /> renders without exploding 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Link
    className="Topic Topic--favorite"
    replace={false}
    to="/trending/exampletopic"
  >
    exampletopic
    <i
      className="iconfont icon-close Topic__close"
      onClick={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      role="presentation"
    />
  </Link>,
  "nodes": Array [
    <Link
      className="Topic Topic--favorite"
      replace={false}
      to="/trending/exampletopic"
    >
      exampletopic
      <i
        className="iconfont icon-close Topic__close"
        onClick={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        role="presentation"
      />
    </Link>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Topic
        closable={true}
        favorite={true}
        name="exampletopic"
        onClose={[Function]}
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Topic {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "onCloseClick": [Function],
        "onCloseOut": [Function],
        "onCloseOver": [Function],
        "props": Object {
          "closable": true,
          "favorite": true,
          "name": "exampletopic",
          "onClose": [Function],
        },
        "refs": Object {},
        "state": Object {
          "closing": false,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Link
          className="Topic Topic--favorite"
          replace={false}
          to="/trending/exampletopic"
        >
          exampletopic
          <i
            className="iconfont icon-close Topic__close"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            role="presentation"
          />
        </Link>,
        "_debugID": 2,
        "_renderedOutput": <Link
          className="Topic Topic--favorite"
          replace={false}
          to="/trending/exampletopic"
        >
          exampletopic
          <i
            className="iconfont icon-close Topic__close"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            role="presentation"
          />
        </Link>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Topic
    closable={true}
    favorite={true}
    name="exampletopic"
    onClose={[Function]}
  />,
}
`;
